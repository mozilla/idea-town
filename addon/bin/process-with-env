#!/usr/bin/env node

const fs = require("fs-extra");
const manifestBase = require("../manifest-base.json");
const manifestFilename = __dirname + "/../manifest.json";

if (typeof process.env["ENVIRONMENT_TITLE"] === "undefined") {
  process.env["ENVIRONMENT_TITLE"] = "local";
  process.env["ENVIRONMENT_URL"] = "https://example.com:8000/";
}

const newName = (process.env["ENVIRONMENT_TITLE"] === "production") ?
      "Test Pilot" : `Test Pilot ${process.env["ENVIRONMENT_TITLE"]} build`;
const newId = (process.env["ENVIRONMENT_TITLE"] === "production") ?
      "@testpilot-addon" : `@testpilot-addon-${process.env["ENVIRONMENT_TITLE"]}`;

const currentEnvContent = `
/* This file is generated by "bin/process-with-env" */
// eslint-disable-next-line no-unused-vars
const currentEnvironment = {
  name: "${process.env["ENVIRONMENT_TITLE"]}",
  baseUrl: "${process.env["ENVIRONMENT_URL"]}"
};
`;

fs.writeJson(manifestFilename, Object.assign(manifestBase, {
  name: newName,
  applications: {
    gecko: Object.assign(manifestBase.applications.gecko, {id: newId})
  },
  permissions: manifestBase.permissions.concat([process.env["ENVIRONMENT_URL"]])
})).then(() => {
  fs.writeFile("current-environment.js", currentEnvContent).then(() => {
    console.log("it is complete");
    process.exit();
  });
}).catch(err => {
  console.error(err)
});
